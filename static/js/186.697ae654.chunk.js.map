{"version":3,"file":"static/js/186.697ae654.chunk.js","mappings":"6LAAO,IAAMA,EAAO,mCACPC,EAAW,8B,yGCIhBC,EAAcC,EAAQ,IAAtBD,UAoCR,UAnCgB,WACd,IAAQE,EAAYF,IAAZE,QACR,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,iGACQC,EAAe,IAAIC,gBAAgB,CACvCC,QAASX,EAAAA,IAELY,EAJR,UAIiBX,EAAAA,EAJjB,kBAImCG,EAJnC,oBAIsDK,GAJtD,SAKqBI,EAAAA,EAAAA,IAAUD,GAL/B,OAKQE,EALR,OAMUC,EAASD,EAATC,KACRR,EAAWQ,EAAKC,SAPlB,4CADc,uBAAC,WAAD,wBAUdC,EACD,GAAE,CAACb,IAEJc,QAAQC,IAAIb,IAGV,0BACE,wBACsB,IAAnBA,EAAQc,OACLd,EAAQe,KAAI,SAAAC,GAAM,OAChB,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADA,IADrB,gBAWR,C","sources":["API/API.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["export const API_KEY = `4edff4826c8bc55fc5b07cfb0ea79ea0`;\nexport const BASE_URL = 'https://api.themoviedb.org/3';\n","import { API_KEY, BASE_URL } from 'API/API';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nconst { useParams } = require('react-router-dom');\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    async function getReviews() {\n      const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n      });\n      const url = `${BASE_URL}/movie/${movieId}/reviews?${searchParams}`;\n      const resp = await axios.get(url);\n      const { data } = resp;\n      setReviews(data.results);\n    }\n    getReviews();\n  }, [movieId]);\n\n  console.log(reviews);\n\n  return (\n    <div>\n      <ul>\n        {reviews.length !== 0\n          ? reviews.map(review => (\n              <li key={review.id}>\n                <h3>Author: {review.author}</h3>\n                <p>{review.content}</p>\n              </li>\n            ))\n          : `no results`}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n\nReviews.propTypes = {\n  movieId: PropTypes.number,\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      author: PropTypes.string,\n      content: PropTypes.string,\n    })\n  ),\n};\n"],"names":["API_KEY","BASE_URL","useParams","require","movieId","useState","reviews","setReviews","useEffect","searchParams","URLSearchParams","api_key","url","axios","resp","data","results","getReviews","console","log","length","map","review","author","content","id"],"sourceRoot":""}